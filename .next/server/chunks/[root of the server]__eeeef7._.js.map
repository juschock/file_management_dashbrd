{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshuauschock/Desktop/dev/githubPortfolio/next_prac/file_management_dashboard/src/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\n\nconst authOptions = {\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        username: { label: \"Username\", type: \"text\", placeholder: \"demo\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        if (credentials.username === \"demo\" && credentials.password === \"demo\") {\n          return { id: 1, name: \"Demo User\", email: \"demo@example.com\" };\n        }\n        return null;\n      },\n    }),\n  ],\n  session: { strategy: \"jwt\" },\n  secret: process.env.NEXTAUTH_SECRET,\n};\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,cAAc;IAClB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;oBAAQ,aAAa;gBAAO;gBACjE,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,YAAY,QAAQ,KAAK,UAAU,YAAY,QAAQ,KAAK,QAAQ;oBACtE,OAAO;wBAAE,IAAI;wBAAG,MAAM;wBAAa,OAAO;oBAAmB;gBAC/D;gBACA,OAAO;YACT;QACF;KACD;IACD,SAAS;QAAE,UAAU;IAAM;IAC3B,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}